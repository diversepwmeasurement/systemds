jobs:
  build:
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-package: jdk
        java-version: '11'
    - continue-on-error: true
      run: printf "JAVA_HOME = $JAVA_HOME \n"
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: gpg key generation - transient
      run: "printf \"HOME: $HOME \\n\"\nls $HOME\nexport GNUPGHOME=\"$HOME/.gnupg\"\
        \nls *\ncat >tempkey <<EOF\n  %echo Generating a basic OpenPGP key\n  Key-Type:\
        \ DSA\n  Key-Length: 1024\n  Subkey-Type: ELG-E\n  Subkey-Length: 1024\n \
        \ Name-Real: J143 Bot\n  Name-Comment: This is automation script\n  Name-Email:\
        \ j143+[bot]@protonmail.com\n  Expire-Date: 0\n  Passphrase: asdfghjkl\n \
        \ # Do a commit here, so that we can later print \"done\" :-)\n  %commit\n\
        \  %echo done\nEOF\ngpg --batch --generate-key tempkey\nsudo cp -rp $HOME/.gnupg\
        \ $HOME/gnupghome\nls $HOME/gnupghome\n"
    - continue-on-error: true
      name: Set the GPG key ID
      run: 'gpg --list-keys

        GPG_KEY_FINGERPRINT="$(gpg --list-keys | head -n 4 | tail -n 1 | sed ''s/^
        *//g'')"

        GPG_KEY_ID="${GPG_KEY_FINGERPRINT: (-8)}"

        '
    - continue-on-error: true
      env:
        ASF_PASSWORD: asdfghjkl
        ASF_USERNAME: firstname
        CORRECT_RELEASE_INFO: '1'
        DRY_RUN: '1'
        GIT_BRANCH: main
        GIT_EMAIL: j143+[bot]@protonmail.com
        GIT_NAME: Firstname Lastname
        GPG_PASSPHRASE: asdfghjkl
        RELEASE_VERSION: 3.0.0
      name: Run invoke script
      run: 'cd $GITHUB_WORKSPACE

        printf "$GITHUB_WORKSPACE --> github workspace\n"

        export GNUPGHOME="$HOME/gnupghome"

        gpgconf --kill gpg-agent

        ls $GNUPGHOME

        GPG_KEY_FINGERPRINT="$(gpg --list-keys | head -n 4 | tail -n 1 | sed ''s/^
        *//g'')"

        GPG_KEY_ID="${GPG_KEY_FINGERPRINT: (-8)}"

        export GPG_KEY=$GPG_KEY_ID

        bash $GITHUB_WORKSPACE/dev/release/do-release.sh -n -g

        '
name: Test Release scripts with dry run
on:
  repository_dispatch:
    types: trigger-ga___release-scripts.yml
